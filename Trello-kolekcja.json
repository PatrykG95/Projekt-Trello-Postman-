{
	"info": {
		"_postman_id": "3299da74-20c6-4056-a3d4-dffc369f4d56",
		"name": "Projekt Trello",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Tworzenie nowej tablicy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody;\r",
							"\r",
							"pm.test(\"Should verify status code\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"    resBody = pm.response.json();\r",
							"})\r",
							"\r",
							"pm.test(\"Should verify created board \", () => {\r",
							"    pm.expect(resBody.name).to.eql(pm.collectionVariables.get(\"boardName\"));\r",
							"})\r",
							"\r",
							"pm.test (\"Should verify repsonse id\", () => {\r",
							"    \r",
							"    pm.expect(resBody.id.length).to.greaterThan(10);\r",
							"    pm.collectionVariables.set(\"boardId\", resBody.id);\r",
							"    pm.expect(resBody.id).to.eql(pm.collectionVariables.get(\"boardId\"));\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/boards/?name={{boardName}}&key={{key}}&token={{token}}&desc=ww",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "{{boardName}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "desc",
							"value": "ww"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Pokazywanie listy tablic",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody;\r",
							"\r",
							"pm.test(\"Should verify status code\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"    resBody = pm.response.json();\r",
							"})\r",
							"\r",
							"pm.test(\"Should verify type of name\", () => {\r",
							"    resBody.map (item => {\r",
							"        pm.expect(item.name).to.be.a(\"string\");\r",
							"    })\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members/me/boards?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"me",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Tworzenie nowej listy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody;\r",
							"\r",
							"pm.test(\"Should verify status code\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"    resBody = pm.response.json();\r",
							"})\r",
							"\r",
							"pm.test(\"Should verify list name\", () => {\r",
							"    pm.expect(resBody.name).to.eql(pm.collectionVariables.get(\"listName\"));\r",
							"    pm.collectionVariables.set(\"listId\", resBody.id);\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/boards/{{boardId}}/lists?key={{key}}&token={{token}}&name={{listName}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"boards",
						"{{boardId}}",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "{{listName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Member",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/members/patrykgancarz?key={{key}}&token={{token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"members",
						"patrykgancarz"
					],
					"query": [
						{
							"key": "id",
							"value": "patrykgancarz",
							"disabled": true
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Pokazywanie listy dostÄ™pnych list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody;\r",
							"\r",
							"pm.test(\"Should verify status code\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"    resBody = pm.response.json();\r",
							"})\r",
							"\r",
							"pm.test(\"Should verify closed value\", () => {\r",
							"    resBody.map(item => {\r",
							"        pm.expect(item.closed).to.eql(false);\r",
							"    })\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/boards/{{boardId}}/lists?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"boards",
						"{{boardId}}",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Tworzenie nowej karty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody;\r",
							"\r",
							"pm.test(\"Should verify status code\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"    resBody = pm.response.json();\r",
							"})\r",
							"\r",
							"pm.test(\"Should verify value of id list and id board\", () => {\r",
							"    pm.expect(resBody.idList).to.eql(pm.collectionVariables.get(\"listId\"));\r",
							"    pm.expect(resBody.idBoard).to.eql(pm.collectionVariables.get(\"boardId\"));\r",
							"\r",
							"})\r",
							"\r",
							"pm.collectionVariables.set(\"cardId\", resBody.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cards?idList={{listId}}&key={{key}}&token={{token}}&name={{cardName}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{listId}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "{{cardName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Pokazywanie listy stworzonych kart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody;\r",
							"\r",
							"pm.test(\"Should verify status code\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"    resBody = pm.response.json();\r",
							"})\r",
							"\r",
							"pm.test(\"Should verify boardId and listId\", () => {\r",
							"    resBody.map(item => {\r",
							"        pm.expect(item.idBoard).to.eql(pm.collectionVariables.get(\"boardId\"));\r",
							"    })\r",
							"    resBody.map(item => {\r",
							"        pm.expect(item.idList).to.eql(pm.collectionVariables.get(\"listId\"));\r",
							"    })\r",
							"})\r",
							"\r",
							"pm.test (\"Should verify type shortLink\", () => {\r",
							"    resBody.map(item => {\r",
							"        pm.expect(item.shortLink).to.be.a(\"string\");\r",
							"    })\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/boards/{{boardId}}/cards?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"boards",
						"{{boardId}}",
						"cards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Aktualizacja karty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody;\r",
							"\r",
							"pm.test(\"Should verify status code\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"    resBody = pm.response.json();\r",
							"})\r",
							"\r",
							"pm.test(\"Should verify updated name value\", () => {\r",
							"    pm.expect(resBody.name).to.eql(pm.collectionVariables.get(\"updateCardName\"));\r",
							"})\r",
							"\r",
							"pm.test(\"Should verify updated desc value\", () => {\r",
							"    pm.expect(resBody.desc).to.eql(pm.collectionVariables.get(\"updateCardDesc\"));\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cards/{{cardId}}?key={{key}}&token={{token}}&name={{updateCardName}}&desc={{updateCardDesc}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cards",
						"{{cardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "{{updateCardName}}"
						},
						{
							"key": "desc",
							"value": "{{updateCardDesc}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Usuwanie karty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should verify status code\", () => {\r",
							"    pm.response.to.have.status(200); \r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cards/{{cardId}}?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cards",
						"{{cardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Usuwanie tablicy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should verify status code\", () => {\r",
							"    pm.response.to.have.status(200); \r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/boards/{{boardId}}?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"boards",
						"{{boardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.trello.com/1",
			"type": "string"
		},
		{
			"key": "boardName",
			"value": "Tablica z API",
			"type": "string"
		},
		{
			"key": "listName",
			"value": "W trakcie testÃ³w",
			"type": "string"
		},
		{
			"key": "cardName",
			"value": "Nie dziaÅ‚a sysem logowania",
			"type": "string"
		},
		{
			"key": "cardId",
			"value": ""
		},
		{
			"key": "updateCardName",
			"value": "",
			"type": "string"
		},
		{
			"key": "updateCardDesc",
			"value": "",
			"type": "string"
		},
		{
			"key": "boardId",
			"value": ""
		},
		{
			"key": "listId",
			"value": ""
		}
	]
}